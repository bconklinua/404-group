openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /authors/:
    get:
      operationId: listAuthors
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - authors
    post:
      operationId: createAuthor
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - authors
  /authors/{id}/:
    get:
      operationId: retrieveAuthor
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - authors
    put:
      operationId: updateAuthor
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - authors
    patch:
      operationId: partialUpdateAuthor
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - authors
    delete:
      operationId: destroyAuthor
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - authors
  /posts/:
    get:
      operationId: listPosts
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
          description: ''
      tags:
      - posts
    post:
      operationId: createPost
      description: ''
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
      tags:
      - posts
  /posts/{id}/:
    get:
      operationId: retrievePost
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
      tags:
      - posts
    put:
      operationId: updatePost
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
      tags:
      - posts
    patch:
      operationId: partialUpdatePost
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
      tags:
      - posts
    delete:
      operationId: destroyPost
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - posts
  /api/test/:
    get:
      operationId: listTestIfLoggedIns
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/auth/test/:
    get:
      operationId: listTestIfLoggedIns
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /friendrequest/:
    get:
      operationId: listFriendRequests
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FriendRequest'
          description: ''
      tags:
      - friendrequest
  /authors/{author_id}/posts/:
    get:
      operationId: listPosts
      description: ''
      parameters:
      - name: author_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
          description: ''
      tags:
      - authors
    post:
      operationId: createPost
      description: ''
      parameters:
      - name: author_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
      tags:
      - authors
  /authors/{author_id}/posts/{id}/:
    get:
      operationId: retrievePost
      description: ''
      parameters:
      - name: author_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
      tags:
      - authors
    put:
      operationId: updatePost
      description: ''
      parameters:
      - name: author_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
      tags:
      - authors
    patch:
      operationId: partialUpdatePost
      description: ''
      parameters:
      - name: author_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
      tags:
      - authors
    delete:
      operationId: destroyPost
      description: ''
      parameters:
      - name: author_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - authors
  /authors/{author_id}/likes/:
    get:
      operationId: listLikes
      description: ''
      parameters:
      - name: author_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Like'
          description: ''
      tags:
      - authors
    post:
      operationId: createLike
      description: ''
      parameters:
      - name: author_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Like'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Like'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Like'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Like'
          description: ''
      tags:
      - authors
  /authors/{author_id}/likes/{id}/:
    get:
      operationId: retrieveLike
      description: ''
      parameters:
      - name: author_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Like'
          description: ''
      tags:
      - authors
    put:
      operationId: updateLike
      description: ''
      parameters:
      - name: author_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Like'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Like'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Like'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Like'
          description: ''
      tags:
      - authors
    patch:
      operationId: partialUpdateLike
      description: ''
      parameters:
      - name: author_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Like'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Like'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Like'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Like'
          description: ''
      tags:
      - authors
    delete:
      operationId: destroyLike
      description: ''
      parameters:
      - name: author_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - authors
  /posts/{post_id}/likes/:
    get:
      operationId: listLikes
      description: ''
      parameters:
      - name: post_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Like'
          description: ''
      tags:
      - posts
    post:
      operationId: createLike
      description: ''
      parameters:
      - name: post_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Like'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Like'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Like'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Like'
          description: ''
      tags:
      - posts
  /posts/{post_id}/likes/{id}/:
    get:
      operationId: retrieveLike
      description: ''
      parameters:
      - name: post_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Like'
          description: ''
      tags:
      - posts
    put:
      operationId: updateLike
      description: ''
      parameters:
      - name: post_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Like'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Like'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Like'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Like'
          description: ''
      tags:
      - posts
    patch:
      operationId: partialUpdateLike
      description: ''
      parameters:
      - name: post_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Like'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Like'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Like'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Like'
          description: ''
      tags:
      - posts
    delete:
      operationId: destroyLike
      description: ''
      parameters:
      - name: post_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - posts
  /comments/{comment_id}/likes/:
    get:
      operationId: listLikes
      description: ''
      parameters:
      - name: comment_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Like'
          description: ''
      tags:
      - comments
    post:
      operationId: createLike
      description: ''
      parameters:
      - name: comment_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Like'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Like'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Like'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Like'
          description: ''
      tags:
      - comments
  /comments/{comment_id}/likes/{id}/:
    get:
      operationId: retrieveLike
      description: ''
      parameters:
      - name: comment_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Like'
          description: ''
      tags:
      - comments
    put:
      operationId: updateLike
      description: ''
      parameters:
      - name: comment_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Like'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Like'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Like'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Like'
          description: ''
      tags:
      - comments
    patch:
      operationId: partialUpdateLike
      description: ''
      parameters:
      - name: comment_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Like'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Like'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Like'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Like'
          description: ''
      tags:
      - comments
    delete:
      operationId: destroyLike
      description: ''
      parameters:
      - name: comment_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - comments
  /authors/{author_id}/inbox/:
    get:
      operationId: listInboxs
      description: ''
      parameters:
      - name: author_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Inbox'
          description: ''
      tags:
      - authors
  /followers/:
    get:
      operationId: listFollows
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Follow'
          description: ''
      tags:
      - followers
  /following/:
    get:
      operationId: listFollows
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Follow'
          description: ''
      tags:
      - following
  /truefriends/:
    get:
      operationId: listAuthors
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - truefriends
  /posts/{post_id}/comments/:
    get:
      operationId: listComments
      description: ''
      parameters:
      - name: post_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
          description: ''
      tags:
      - posts
    post:
      operationId: createComment
      description: ''
      parameters:
      - name: post_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
      tags:
      - posts
  /posts/{post_id}/comments/{id}/:
    get:
      operationId: retrieveComment
      description: ''
      parameters:
      - name: post_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
      tags:
      - posts
    put:
      operationId: updateComment
      description: ''
      parameters:
      - name: post_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
      tags:
      - posts
    patch:
      operationId: partialUpdateComment
      description: ''
      parameters:
      - name: post_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
      tags:
      - posts
    delete:
      operationId: destroyComment
      description: ''
      parameters:
      - name: post_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - posts
  /authors/{author_id}/comments/:
    get:
      operationId: listComments
      description: ''
      parameters:
      - name: author_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
          description: ''
      tags:
      - authors
    post:
      operationId: createComment
      description: ''
      parameters:
      - name: author_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
      tags:
      - authors
  /authors/{author_id}/comments/{id}/:
    get:
      operationId: retrieveComment
      description: ''
      parameters:
      - name: author_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
      tags:
      - authors
    put:
      operationId: updateComment
      description: ''
      parameters:
      - name: author_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
      tags:
      - authors
    patch:
      operationId: partialUpdateComment
      description: ''
      parameters:
      - name: author_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
      tags:
      - authors
    delete:
      operationId: destroyComment
      description: ''
      parameters:
      - name: author_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - authors
  /currentauthor/posts/:
    get:
      operationId: listPosts
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
          description: ''
      tags:
      - currentauthor
    post:
      operationId: createPost
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
      tags:
      - currentauthor
  /currentauthor/posts/{id}/:
    get:
      operationId: retrievePost
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this post.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
      tags:
      - currentauthor
    put:
      operationId: updatePost
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this post.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
      tags:
      - currentauthor
    patch:
      operationId: partialUpdatePost
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this post.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
      tags:
      - currentauthor
    delete:
      operationId: destroyPost
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this post.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - currentauthor
  /api/register/:
    post:
      operationId: createAuthor
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - api
  /api/login/:
    post:
      operationId: createLogin
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/token/obtain/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
  /api/token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
  /api/auth/register/:
    post:
      operationId: createAuthor
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - api
  /api/auth/login/:
    post:
      operationId: createLogin
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/auth/token/obtain/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
  /api/auth/token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
  /friendrequest/accept/{fr_id}/:
    post:
      operationId: createFriendRequest
      description: ''
      parameters:
      - name: fr_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FriendRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FriendRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendRequest'
          description: ''
      tags:
      - friendrequest
  /friendrequest/reject/{fr_id}/:
    post:
      operationId: createFriendRequest
      description: ''
      parameters:
      - name: fr_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FriendRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FriendRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendRequest'
          description: ''
      tags:
      - friendrequest
  /friendrequest/{author_id}/:
    post:
      operationId: createFriendRequest
      description: ''
      parameters:
      - name: author_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FriendRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FriendRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendRequest'
          description: ''
      tags:
      - friendrequest
  /unfollow/{user_id}/:
    post:
      operationId: createFollow
      description: ''
      parameters:
      - name: user_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Follow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Follow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Follow'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Follow'
          description: ''
      tags:
      - unfollow
  /unfriend/{user_id}/:
    post:
      operationId: createFollow
      description: ''
      parameters:
      - name: user_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Follow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Follow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Follow'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Follow'
          description: ''
      tags:
      - unfriend
  /withdraw/{user_id}/:
    post:
      operationId: createFollow
      description: ''
      parameters:
      - name: user_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Follow'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Follow'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Follow'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Follow'
          description: ''
      tags:
      - withdraw
components:
  schemas:
    Author:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          description: Designates that this user has all permissions without explicitly
            assigning them.
        email:
          type: string
          format: email
          maxLength: 254
        username:
          type: string
          maxLength: 30
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        is_staff:
          type: boolean
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - password
      - email
      - username
    Post:
      type: object
      properties:
        type:
          type: string
          readOnly: true
        author:
          type: integer
          nullable: true
        title:
          type: string
          maxLength: 30
        id:
          type: integer
          readOnly: true
        source:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        origin:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          maxLength: 200
        contentType:
          enum:
          - text/markdown
          - text/plain
          - application/base64
          - image/png;base64
          - image/jpeg;base64
          type: string
        content:
          type: string
          nullable: true
        categories:
          type: array
          items:
            type: integer
        count:
          type: string
          readOnly: true
        published:
          type: string
          format: date-time
          readOnly: true
        visibility:
          enum:
          - PUBLIC
          - FRIENDS
          type: string
        unlisted:
          type: boolean
        image:
          type: string
          format: binary
        image_url:
          type: string
          nullable: true
          maxLength: 100
    FriendRequest:
      type: object
      properties:
        sender:
          type: integer
          nullable: true
        recipient:
          type: integer
          nullable: true
    Like:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        summary:
          type: string
          readOnly: true
        author:
          type: integer
          nullable: true
        post:
          type: integer
          nullable: true
        comment:
          type: integer
          nullable: true
    Inbox:
      type: object
      properties:
        type:
          type: string
          readOnly: true
        author:
          type: integer
        posts:
          type: string
          readOnly: true
        likes:
          type: string
          readOnly: true
        comments:
          type: string
          readOnly: true
      required:
      - author
    Follow:
      type: object
      properties:
        follower:
          type: integer
          nullable: true
        followee:
          type: integer
          nullable: true
    Comment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        published:
          type: string
          format: date-time
          readOnly: true
        comment:
          type: string
          maxLength: 5000
        contentType:
          enum:
          - text/markdown
          - text/plain
          - application/base64
          - image/png;base64
          - image/jpeg;base64
          type: string
        author:
          type: integer
          nullable: true
        post:
          type: integer
          nullable: true
      required:
      - comment
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
